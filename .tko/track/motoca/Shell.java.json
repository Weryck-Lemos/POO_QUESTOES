{
    "patches": [
        {
            "label": "2025-08-24_01-29-51",
            "content": "@@ -1322,25 +1322,16 @@\n %22, time%22\n-%0A        \n +this.ti\n@@ -1349,48 +1349,9 @@\n on:%22\n-%0A        + pessoa == null ? %22(empty)%22 : \n++\n pess\n",
            "lines": "127"
        },
        {
            "label": "2025-08-24_01-30-55",
            "content": "@@ -1312,25 +1312,16 @@\n is.power\n-%0A        \n + %22, tim\n@@ -1322,16 +1322,24 @@\n %22, time%22\n+%0A       \n  +this.t\n@@ -1365,17 +1365,16 @@\n       + \n-(\n pessoa =\n@@ -1411,17 +1411,16 @@\n tName())\n-)\n ;%0A    %7D%0A\n",
            "lines": "129"
        },
        {
            "label": "2025-08-24_01-33-19",
            "content": "@@ -1330,17 +1330,16 @@\n  %22, time\n-:\n %22 +this.\n",
            "lines": "129"
        },
        {
            "label": "2025-08-24_01-33-27",
            "content": "@@ -721,9 +721,9 @@\n soa \n-!\n+=\n = nu\n@@ -1404,24 +1404,23 @@\n  pessoa.\n-toString\n+getName\n ()));%0A  \n",
            "lines": "129"
        },
        {
            "label": "2025-08-24_01-34-16",
            "content": "@@ -794,39 +794,8 @@\n    %7D\n-%0A%0A        this.pessoa = pessoa;\n %0A   \n",
            "lines": "129"
        },
        {
            "label": "2025-08-24_01-35-44",
            "content": "@@ -1432,12 +1432,8 @@\n %22 : \n-%22(%22+\n pess\n@@ -1449,12 +1449,8 @@\n ng()\n-+%22)%22\n ));%0A\n",
            "lines": "131"
        },
        {
            "label": "2025-08-24_01-36-13",
            "content": "@@ -769,45 +769,22 @@\n il: \n-busy motorcycle%22);%0A            return\n+j%C3%A1 tem gente%22)\n ;%0A  \n",
            "lines": "131"
        },
        {
            "label": "2025-08-24_01-37-19",
            "content": "@@ -946,46 +946,35 @@\n il: \n-empty motorcycle%22);%0A            return\n+n%C3%A3o h%C3%A1 pessoa para descer%22)\n ;%0A  \n",
            "lines": "132"
        },
        {
            "label": "2025-08-24_01-37-54",
            "content": "@@ -1176,122 +1176,8 @@\n o)%7B%0A\n-        if(this.time ==0)%7B%0A            System.out.println(%22fail: buy time first%22);%0A            return;%0A        %7D%0A%0A\n     \n",
            "lines": "133"
        },
        {
            "label": "2025-08-24_01-39-38",
            "content": "@@ -1176,124 +1176,8 @@\n o)%7B%0A\n-        if(pessoa == null)%7B%0A            System.out.println(%22fail empty motorcycle%22);%0A            return;%0A        %7D%0A%0A\n     \n",
            "lines": "138"
        },
        {
            "label": "2025-08-24_01-40-50",
            "content": "@@ -1187,21 +1187,22 @@\n  if(\n-this.time ==0\n+pessoa == null\n )%7B%0A \n@@ -1240,24 +1240,25 @@\n fail\n-: buy time first\n+ empty motorcycle\n %22);%0A\n@@ -1295,38 +1295,37 @@\n %0A        if(\n-pessoa == null\n+this.time ==0\n )%7B%0A         \n@@ -1351,33 +1351,32 @@\n ln(%22fail\n- empty motorcycle\n+: buy time first\n %22);%0A    \n",
            "lines": "143"
        },
        {
            "label": "2025-08-24_01-41-07",
            "content": "@@ -1342,33 +1342,32 @@\n ut.println(%22fail\n-:\n  empty motorcycl\n",
            "lines": "143"
        },
        {
            "label": "2025-08-24_01-41-17",
            "content": "@@ -1407,130 +1407,8 @@\n  %7D%0A%0A\n-        if(pessoa.getAge() %3E10)%7B%0A            System.out.println(%22fail: too old to drive%22);%0A            return;%0A        %7D%0A%0A\n     \n",
            "lines": "143"
        },
        {
            "label": "2025-08-24_01-42-28",
            "content": "@@ -1529,133 +1529,8 @@\n  %7D%0A%0A\n-        if(this.time %3C tempo)%7B%0A            System.out.println(%22fail: time finished after %22+this.time+%22 minutes%22);%0A        %7D%0A%0A\n     \n",
            "lines": "148"
        },
        {
            "label": "2025-08-24_01-43-26",
            "content": "@@ -1757,63 +1757,21 @@\n     \n-String e = %22e%22.repeat(power);%0A        return(%22P%22+e+%22m%22)\n+return %22honk%22\n ;%0A  \n",
            "lines": "152"
        },
        {
            "label": "2025-08-24_01-45-14",
            "content": "@@ -1874,29 +1874,101 @@\n     \n-String who = \n+return (%22power:%22+this.power%0A        + %22, time:%22 +this.time+ %22, person:%22%0A        + (\n pessoa\n+ \n ==\n+ \n null\n@@ -2011,87 +2011,9 @@\n +%22)%22\n-;%0A        return String.format(%22power:%25d, time:%25d, person:%25s%22, power, time, who\n+)\n );%0A \n",
            "lines": "153"
        },
        {
            "label": "2025-08-24_01-51-55",
            "content": "import java.util.*;\n\nclass Pessoa{\n    private int age;\n    private String name;\n\n    public Pessoa(int age, String name){\n        this.age = age;\n        this.name = name;\n    }\n\n    int getAge(){\n        return age;\n    }\n\n    String getName(){\n        return name;\n    }\n\n    @Override\n    public String toString() {\n        return (this.name+\":\"+this.age);\n    }\n}\n\nclass Moto{\n    private Pessoa pessoa;\n    private int power;\n    private int time;\n\n    public Moto(){\n        this.pessoa = null;\n        this.power = 1;\n        this.time = 0;\n    }\n\n    public Moto(int power){\n        this.pessoa = null;\n        this.power = power;\n        this.time = 0;\n    }\n\n    void subir(Pessoa pessoa){\n        if(this.pessoa != null){\n            System.out.println(\"fail: busy motorcycle\");\n            return;\n        }\n\n        this.pessoa = pessoa;\n    }\n\n    void descer(){\n        if(this.pessoa == null){\n            System.out.println(\"fail: empty motorcycle\");\n            return;\n        }\n        System.out.println(pessoa.toString());\n        this.pessoa = null;\n    }\n\n    void comprarTempo(int tempo){\n        this.time += tempo;\n    }\n\n    void dirigir(int tempo){\n        if(this.time ==0){\n            System.out.println(\"fail: buy time first\");\n            return;\n        }\n\n        if(pessoa == null){\n            System.out.println(\"fail: empty motorcycle\");\n            return;\n        }\n\n        if(pessoa.getAge() >10){\n            System.out.println(\"fail: too old to drive\");\n            return;\n        }\n\n        if(this.time < tempo){\n            System.out.println(\"fail: time finished after \"+this.time+\" minutes\");\n        }\n\n        this.time -= tempo;\n        this.time = Math.max(time,0);\n    }\n\n    String buzinar(){\n        String e = \"e\".repeat(power);\n        return(\"P\"+e+\"m\");\n    }\n\n    @Override\n    public String toString() {\n        String who = pessoa==null ? \"(empty)\" : \"(\"+pessoa.toString()+\")\";\n        return String.format(\"power:%d, time:%d, person:%s\", power, time, who);\n    }\n\n}\n\npublic class Shell{\n    \n    public static void main(String[] args) {\n        Moto moto = new Moto();\n\n        while(true) {\n            var line = scanner.nextLine();\n            System.out.println(\"$\" + line);\n\n            var par = line.split(\" \");\n            var cmd = par[0];\n\n            if (cmd.equals(\"end\")) {\n                break;\n            }\n            else if (cmd.equals(\"init\")) {\n        \n                var power = Integer.parseInt(par[1]);\n                moto = new Moto(power);\n            }\n            else if (cmd.equals(\"show\")) {\n                System.out.println(moto.toString());\n            }\n            else if (cmd.equals(\"enter\")){\n                var name = par[1];\n                var age = Integer.parseInt(par[2]);\n                Pessoa pessoa = new Pessoa(age, name);\n                moto.subir(pessoa);\n            }\n            else if (cmd.equals(\"leave\")) {\n                moto.descer();\n            }\n            else if (cmd.equals(\"buy\")) {\n                var time = Integer.parseInt(par[1]);\n                moto.comprarTempo(time);\n            }\n            else if (cmd.equals(\"drive\")) {\n                var time = Integer.parseInt(par[1]);\n                moto.dirigir(time);\n            }\n            else if (cmd.equals(\"honk\")) {\n                System.out.println(moto.buzinar());\n            }\n            else {\n                System.out.println(\"fail: comando invalido\");\n            }\n        }\n    }\n\n    static Scanner scanner = new Scanner(System.in);\n}\n",
            "lines": "152"
        }
    ]
}