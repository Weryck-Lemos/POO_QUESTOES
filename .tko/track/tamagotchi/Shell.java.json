{
    "patches": [
        {
            "label": "2025-08-25_01-24-01",
            "content": "@@ -794,37 +794,32 @@\n energy;%0A        \n-this.\n energy = Math.mi\n@@ -1032,37 +1032,32 @@\n  clean;%0A        \n-this.\n clean = Math.min\n",
            "lines": "171"
        },
        {
            "label": "2025-08-25_01-25-59",
            "content": "@@ -806,93 +806,38 @@\n     \n-if(this.energy%3C=0) this.energy = 0;%0A        if(this.energy %3E energyMax) this.\n+this.energy = Math.min(\n energy\n- =\n+,\n  ene\n@@ -834,32 +834,33 @@\n nergy, energyMax\n+)\n ;%0A        if(ene\n@@ -1037,35 +1037,32 @@\n  clean;%0A        \n-if(\n this.clean%3C=0) t\n@@ -1059,52 +1059,26 @@\n lean\n-%3C=0) this.clean = 0;%0A        if(this.\n+ = Math.min(\n clean\n- %3E\n+,\n  cle\n@@ -1083,38 +1083,16 @@\n leanMax)\n- this.clean = cleanMax\n ;%0A      \n",
            "lines": "171"
        },
        {
            "label": "2025-08-25_01-28-35",
            "content": "@@ -906,29 +906,24 @@\n %0A        if(\n-this.\n energy == 0)\n@@ -1197,29 +1197,24 @@\n %0A        if(\n-this.\n clean == 0)%7B\n",
            "lines": "173"
        },
        {
            "label": "2025-08-25_01-31-57",
            "content": "import java.util.*;\n\nclass Tamagochi{\n    private int energyMax;\n    private int cleanMax;\n    private int energy;\n    private int clean;\n    private int age;\n    private boolean alive;\n\n    public Tamagochi(int energyMax, int cleanMax){\n        this.energyMax = energyMax;\n        this.cleanMax = cleanMax;\n        this.energy = energyMax;\n        this.clean = cleanMax;\n        this.age = 0;\n        this.alive = true;\n    }\n\n    int getEnergy(){\n        return energy;\n    }\n\n    int getClean(){\n        return clean;\n    }\n\n    int getAge(){\n        return age;\n    }\n\n    boolean getAlive(){\n        return alive;\n    }\n\n    int getEnergyMax(){\n        return energyMax;\n    }\n\n    int getCleanMax(){\n        return cleanMax;\n    }\n\n    void setEnergy(int energy){\n        this.energy += energy;\n        if(this.energy<=0) this.energy = 0;\n        if(this.energy > energyMax) this.energy = energyMax;\n        if(this.energy == 0){\n            System.out.println(\"fail: pet morreu de fraqueza\");\n            alive = false;\n        }\n    }\n\n    void setClean(int clean){\n        this.clean += clean;\n        if(this.clean<=0) this.clean = 0;\n        if(this.clean > cleanMax) this.clean = cleanMax;\n        if(this.clean == 0){\n            System.out.println(\"fail: pet morreu de sujeira\");\n            alive = false;\n        }\n    }\n\n    void setAge(int age){\n        this.age += age;\n    }\n\n    @Override\n    public String toString() {\n        return String.format(\"E:%d/%d, L:%d/%d, I:%d\", energy, energyMax, clean, cleanMax, age);\n    }\n}\n\nclass Game{\n    Tamagochi tamagochi;\n\n    public Game(){\n\n    }\n\n    public Game(Tamagochi tamagochi){\n        this.tamagochi = tamagochi;\n    }\n\n    boolean Alive(){\n        if(!tamagochi.getAlive()){\n            System.out.println(\"fail: pet esta morto\");\n            return true;\n        }\n\n        return false;\n    }\n\n    void play(){\n        if(Alive()){\n            return;\n        }\n\n        tamagochi.setEnergy(-2);\n        tamagochi.setClean(-3);\n        tamagochi.setAge(1);\n    }\n\n    void sleep(){\n        if(Alive()){\n            return;\n        }\n\n        if(tamagochi.getEnergy() > tamagochi.getEnergyMax()-5){\n            System.out.println(\"fail: nao esta com sono\");\n            return;\n        }\n\n        int sono = tamagochi.getEnergyMax() - tamagochi.getEnergy();\n        tamagochi.setEnergy(sono);\n        tamagochi.setAge(sono);\n    }\n\n    void shower(){\n        if(Alive()){\n            return;\n        }\n\n        tamagochi.setEnergy(-3);\n        tamagochi.setClean(tamagochi.getCleanMax());\n        tamagochi.setAge(2);\n    }\n\n    @Override\n    public String toString() {\n        return tamagochi.toString();\n    }\n}\n\npublic class Shell {\n    public static void main(String[] a) {\n        Game game = new Game();\n        while (true) {\n            var line = scanner.nextLine();\n            System.out.println(\"$\" + line);\n\n            var par = line.split(\" \");\n            var cmd = par[0];\n\n            if (cmd.equals(\"end\")) {\n                break;\n            }\n            else if (cmd.equals(\"init\")) {\n                var energy = Integer.parseInt(par[1]);\n                var clean = Integer.parseInt(par[2]);\n                Tamagochi tamagochi = new Tamagochi(energy, clean);\n                game = new Game(tamagochi);\n            }\n            else if (cmd.equals(\"show\")) { \n                System.out.println(game.toString());\n            }\n            else if (cmd.equals(\"play\")) { \n                game.play();\n            }\n            else if (cmd.equals(\"shower\")) { \n                game.shower();\n            }\n            else if (cmd.equals(\"sleep\")) { \n                game.sleep();\n            }\n            else {\n                System.out.println(\"fail: comando invalido\");\n            }\n        }\n    }\n\n    private static Scanner scanner = new Scanner(System.in);\n}\n",
            "lines": "173"
        }
    ]
}