{
    "patches": [
        {
            "label": "2025-08-24_17-08-54",
            "content": "@@ -2105,67 +2105,8 @@\n ) %7B%0A\n-        String who = hasLead() ? lead.toString() : %22null%22;%0A\n     \n@@ -2174,11 +2174,23 @@\n ss, \n-who\n+lead.toString()\n );%0A \n",
            "lines": "148"
        },
        {
            "label": "2025-08-24_17-09-56",
            "content": "@@ -2200,16 +2200,17 @@\n libre: %25\n+l\n f, grafi\n",
            "lines": "149"
        },
        {
            "label": "2025-08-24_17-11-28",
            "content": "@@ -2830,35 +2830,16 @@\n         \n-System.out.println(\n pencil.t\n@@ -2847,17 +2847,16 @@\n String()\n-)\n ;%0A      \n",
            "lines": "149"
        },
        {
            "label": "2025-08-24_17-11-56",
            "content": "@@ -2204,10 +2204,8 @@\n e: %25\n-.1\n f, g\n",
            "lines": "149"
        },
        {
            "label": "2025-08-24_17-12-11",
            "content": "@@ -23,33 +23,8 @@\n er;%0A\n-import java.util.Locale;%0A\n impo\n@@ -2193,18 +2193,8 @@\n mat(\n-Locale.US,\n %22cal\n",
            "lines": "149"
        },
        {
            "label": "2025-08-24_17-15-58",
            "content": "@@ -822,16 +822,17 @@\n rmat(%22%5B%25\n+l\n f:%25s:%25d%5D\n",
            "lines": "150"
        },
        {
            "label": "2025-08-24_17-16-35",
            "content": "@@ -823,23 +823,11 @@\n mat(\n-Locale.US,\n %22%5B%25\n-1.\n f:%25s\n",
            "lines": "150"
        },
        {
            "label": "2025-08-24_17-16-54",
            "content": "@@ -832,18 +832,18 @@\n e.US,%22%5B%25\n-.\n 1\n+.\n f:%25s:%25d%5D\n",
            "lines": "150"
        },
        {
            "label": "2025-08-24_17-17-13",
            "content": "@@ -1900,17 +1900,16 @@\n heet() %3C\n-=\n 10)%7B%0A   \n",
            "lines": "150"
        },
        {
            "label": "2025-08-24_17-20-01",
            "content": "@@ -1752,17 +1752,16 @@\n Size() %3C\n-=\n 10)%7B%0A   \n@@ -1896,24 +1896,25 @@\n PerSheet() %3C\n+=\n 10)%7B%0A       \n",
            "lines": "150"
        },
        {
            "label": "2025-08-24_17-20-42",
            "content": "@@ -1902,17 +1902,17 @@\n eet() %3C1\n-1\n+0\n )%7B%0A     \n",
            "lines": "150"
        },
        {
            "label": "2025-08-24_17-22-46",
            "content": "@@ -1862,17 +1862,16 @@\n      if(\n-(\n lead.get\n@@ -1903,13 +1903,12 @@\n et()\n-)\n  %3C1\n-0\n+1\n )%7B%0A \n",
            "lines": "150"
        },
        {
            "label": "2025-08-24_17-23-05",
            "content": "@@ -376,29 +376,24 @@\n  if(\n-%22HB%22.equals(hardness)\n+hardness == %22HB%22\n ) re\n@@ -420,29 +420,24 @@\n  if(\n-%222B%22.equals(hardness)\n+hardness == %222B%22\n ) re\n@@ -464,29 +464,24 @@\n  if(\n-%224B%22.equals(hardness)\n+hardness == %224B%22\n ) re\n",
            "lines": "150"
        },
        {
            "label": "2025-08-24_17-26-33",
            "content": "import java.util.Scanner;\nimport java.util.Locale;\nimport java.text.DecimalFormat;\n\nclass Lead{\n    private double thickness;\n    private String hardness;\n    private int size;\n\n    public Lead(double thickness, String hardness, int size){\n        this.thickness = thickness;\n        this.hardness = hardness;\n        this.size = size;\n    }\n\n    int usagePerSheet(){\n        if(\"HB\".equals(hardness)) return 1;\n        else if(\"2B\".equals(hardness)) return 2;\n        else if(\"4B\".equals(hardness)) return 4;\n        else return 6;\n    }\n\n    String getHardness() {\n        return hardness;\n    }\n\n    int getSize(){\n        return size;\n    }\n\n    double getThickness(){\n        return thickness;\n    }\n\n    void setSize(int size){\n        this.size = size;\n    }\n\n    @Override\n    public String toString() {\n        return String.format(Locale.US,\"[%.1f:%s:%d]\",thickness, hardness, size);\n    }\n}\n\nclass Pencil{\n    private double thickness;\n    Lead lead; \n\n    public Pencil(double thickness){\n        this.thickness = thickness;\n        this.lead = null;\n    }\n\n    boolean hasLead(){\n        return lead != null;\n    }\n\n    void insert(Lead lead){\n        if(thickness != lead.getThickness()){\n            System.out.println(\"fail: calibre incompativel\");\n            return;\n        }\n\n        if(hasLead()){\n            System.out.println(\"fail: ja existe grafite\");\n            return;\n        }\n\n        this.lead = lead;\n    }\n\n    void remove(){\n        if(!hasLead()){\n            System.out.println(\"fail: nao existe grafite\");\n            return;\n        }\n\n        this.lead = null;\n    }\n\n    void write(){\n        if(!hasLead()){\n            System.out.println(\"fail: nao existe grafite\");\n            return;\n        }\n\n        else if(lead.getSize() <=10){\n            System.out.println(\"fail: tamanho insuficiente\");\n            return;\n        }\n\n        if((lead.getSize() - lead.usagePerSheet()) <10){\n            System.out.println(\"fail: folha incompleta\");\n            lead.setSize(10);\n            return;\n        }\n\n        lead.setSize(lead.getSize() - lead.usagePerSheet());\n    }\n\n    @Override\n    public String toString() {\n        String who = hasLead() ? lead.toString() : \"null\";\n        return String.format(Locale.US,\"calibre: %.1f, grafite: %s\", thickness, who);\n    }\n}\n\n\npublic class Shell {\n    public static void main(String[] args) {\n        Pencil pencil = new Pencil(0);\n        while (true) {\n            var line = scanner.nextLine();\n            System.out.println(\"$\" + line);\n\n            var par = line.split(\" \");\n            var cmd = par[0];\n\n            if (cmd.equals(\"end\")) {\n                break;\n            }\n            else if (cmd.equals(\"init\")) { \n                var thickness = Double.parseDouble(par[1]);\n                pencil = new Pencil(thickness);\n            }\n            else if (cmd.equals(\"show\")) { \n                System.out.println(pencil.toString());\n            }\n            else if (cmd.equals(\"insert\")) { \n                var thickness = Double.parseDouble(par[1]);\n                var hardness = par[2];\n                var size = Integer.parseInt(par[3]);\n                Lead lead = new Lead(thickness, hardness, size);\n                pencil.insert(lead);\n\n            }\n            else if (cmd.equals(\"remove\")) { \n                pencil.remove();\n            }\n            else if (cmd.equals(\"write\")) { \n                pencil.write();\n            }\n            else {\n                System.out.println(\"fail: comando invalido\");\n            }\n        }\n    }\n\n    static Scanner scanner = new Scanner(System.in);\n}\n",
            "lines": "150"
        }
    ]
}